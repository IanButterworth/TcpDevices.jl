# Automatically generated using Clang.jl


const NISCOPE_MAJOR_VERSION = 19
const NISCOPE_MINOR_VERSION = 600
const MAX_FUNCTION_NAME_SIZE = 55
const MAX_ERROR_DESCRIPTION = IVI_MAX_MESSAGE_BUF_SIZE * 2 + MAX_FUNCTION_NAME_SIZE + 75

# Skipping MacroDefinition: handleErr ( fCall ) { int code = ( fCall ) ; if ( code != 0 ) { const char * fCallSrc = # fCall ; const char * funcName = fCallSrc + strspn ( fCallSrc , " (" ) ; size_t funcNameLen = strcspn ( funcName , " (" ) ; if ( funcNameLen > MAX_FUNCTION_NAME_SIZE - 1 ) funcNameLen = MAX_FUNCTION_NAME_SIZE - 1 ; if ( code < 0 ) { error = code ; strncpy ( errorSource , funcName , funcNameLen ) ; errorSource [ funcNameLen ] = '\0' ; goto Error ; } else if ( ( error == 0 ) && ( code > 0 ) ) { error = code ; strncpy ( errorSource , funcName , funcNameLen ) ; errorSource [ funcNameLen ] = '\0' ; } } }
# Skipping MacroDefinition: niScopeCheckParm ( fCall , paramPosition , errorElaboration ) if ( error = ( fCall ) , ( error = ( error < 0 ) ? ( error ) : VI_SUCCESS ) ) { Ivi_SetErrorInfo ( vi , VI_TRUE , error , Ivi_ParamPositionError ( paramPosition ) , errorElaboration ) ; goto Error ; } else
# Skipping MacroDefinition: niScopeCheckErrElab ( fCall , elab ) { int tempErrorForElab = ( fCall ) ; if ( tempErrorForElab < 0 ) { Ivi_SetErrorInfo ( vi , VI_TRUE , tempErrorForElab , 0 , elab ) ; error = tempErrorForElab ; goto Error ; } else if ( tempErrorForElab > 0 ) { Ivi_SetErrorInfo ( vi , VI_TRUE , tempErrorForElab , 0 , elab ) ; error = tempErrorForElab ; } }

const NISCOPE_ATTR_CACHE = IVI_ATTR_CACHE
const NISCOPE_ATTR_RANGE_CHECK = IVI_ATTR_RANGE_CHECK
const NISCOPE_ATTR_QUERY_INSTRUMENT_STATUS = IVI_ATTR_QUERY_INSTRUMENT_STATUS
const NISCOPE_ATTR_RECORD_COERCIONS = IVI_ATTR_RECORD_COERCIONS
const NISCOPE_ATTR_SIMULATE = IVI_ATTR_SIMULATE
const NISCOPE_ATTR_INTERCHANGE_CHECK = IVI_ATTR_INTERCHANGE_CHECK
const NISCOPE_ATTR_CHANNEL_COUNT = IVI_ATTR_CHANNEL_COUNT
const NISCOPE_ATTR_SUPPORTED_INSTRUMENT_MODELS = IVI_ATTR_SUPPORTED_INSTRUMENT_MODELS
const NISCOPE_ATTR_GROUP_CAPABILITIES = IVI_ATTR_GROUP_CAPABILITIES
const NISCOPE_ATTR_SPECIFIC_DRIVER_DESCRIPTION = IVI_ATTR_SPECIFIC_DRIVER_DESCRIPTION
const NISCOPE_ATTR_SPECIFIC_DRIVER_PREFIX = IVI_ATTR_SPECIFIC_DRIVER_PREFIX
const NISCOPE_ATTR_SPECIFIC_DRIVER_VENDOR = IVI_ATTR_SPECIFIC_DRIVER_VENDOR
const NISCOPE_ATTR_SPECIFIC_DRIVER_CLASS_SPEC_MAJOR_VERSION = IVI_ATTR_SPECIFIC_DRIVER_CLASS_SPEC_MAJOR_VERSION
const NISCOPE_ATTR_SPECIFIC_DRIVER_CLASS_SPEC_MINOR_VERSION = IVI_ATTR_SPECIFIC_DRIVER_CLASS_SPEC_MINOR_VERSION
const NISCOPE_ATTR_SPECIFIC_DRIVER_REVISION = IVI_ATTR_SPECIFIC_DRIVER_REVISION
const NISCOPE_ATTR_INSTRUMENT_MANUFACTURER = IVI_ATTR_INSTRUMENT_MANUFACTURER
const NISCOPE_ATTR_INSTRUMENT_MODEL = IVI_ATTR_INSTRUMENT_MODEL
const NISCOPE_ATTR_INSTRUMENT_FIRMWARE_REVISION = IVI_ATTR_INSTRUMENT_FIRMWARE_REVISION
const NISCOPE_ATTR_IO_RESOURCE_DESCRIPTOR = IVI_ATTR_IO_RESOURCE_DESCRIPTOR
const NISCOPE_ATTR_LOGICAL_NAME = IVI_ATTR_LOGICAL_NAME
const NISCOPE_ATTR_DRIVER_SETUP = IVI_ATTR_DRIVER_SETUP
const NISCOPE_ATTR_ACQUISITION_TYPE = IVISCOPE_ATTR_ACQUISITION_TYPE
const NISCOPE_ATTR_SAMPLE_MODE = IVISCOPE_ATTR_SAMPLE_MODE
const NISCOPE_ATTR_CHANNEL_ENABLED = IVISCOPE_ATTR_CHANNEL_ENABLED
const NISCOPE_ATTR_PROBE_ATTENUATION = IVISCOPE_ATTR_PROBE_ATTENUATION
const NISCOPE_ATTR_VERTICAL_RANGE = IVISCOPE_ATTR_VERTICAL_RANGE
const NISCOPE_ATTR_VERTICAL_OFFSET = IVISCOPE_ATTR_VERTICAL_OFFSET
const NISCOPE_ATTR_VERTICAL_COUPLING = IVISCOPE_ATTR_VERTICAL_COUPLING
const NISCOPE_ATTR_MAX_INPUT_FREQUENCY = IVISCOPE_ATTR_MAX_INPUT_FREQUENCY
const NISCOPE_ATTR_INPUT_IMPEDANCE = IVISCOPE_ATTR_INPUT_IMPEDANCE
const NISCOPE_ATTR_HORZ_TIME_PER_RECORD = IVISCOPE_ATTR_HORZ_TIME_PER_RECORD
const NISCOPE_ATTR_ACQUISITION_START_TIME = IVISCOPE_ATTR_ACQUISITION_START_TIME
const NISCOPE_ATTR_HORZ_MIN_NUM_PTS = IVISCOPE_ATTR_HORZ_MIN_NUM_PTS
const NISCOPE_ATTR_HORZ_RECORD_LENGTH = IVISCOPE_ATTR_HORZ_RECORD_LENGTH
const NISCOPE_ATTR_HORZ_RECORD_REF_POSITION = IVI_CLASS_PUBLIC_ATTR_BASE + Int32(11)
const NISCOPE_ATTR_HORZ_SAMPLE_RATE = IVISCOPE_ATTR_HORZ_SAMPLE_RATE
const NISCOPE_ATTR_TRIGGER_TYPE = IVISCOPE_ATTR_TRIGGER_TYPE
const NISCOPE_ATTR_TRIGGER_SOURCE = IVISCOPE_ATTR_TRIGGER_SOURCE
const NISCOPE_ATTR_TRIGGER_LEVEL = IVISCOPE_ATTR_TRIGGER_LEVEL
const NISCOPE_ATTR_TRIGGER_DELAY_TIME = IVI_CLASS_PUBLIC_ATTR_BASE + Int32(15)
const NISCOPE_ATTR_TRIGGER_HOLDOFF = IVISCOPE_ATTR_TRIGGER_HOLDOFF
const NISCOPE_ATTR_TRIGGER_COUPLING = IVISCOPE_ATTR_TRIGGER_COUPLING
const NISCOPE_ATTR_TRIGGER_SLOPE = IVISCOPE_ATTR_TRIGGER_SLOPE
const NISCOPE_ATTR_TV_TRIGGER_EVENT = IVISCOPE_ATTR_TV_TRIGGER_EVENT
const NISCOPE_ATTR_TV_TRIGGER_LINE_NUMBER = IVISCOPE_ATTR_TV_TRIGGER_LINE_NUMBER
const NISCOPE_ATTR_TV_TRIGGER_SIGNAL_FORMAT = IVISCOPE_ATTR_TV_TRIGGER_SIGNAL_FORMAT
const NISCOPE_ATTR_TV_TRIGGER_POLARITY = IVISCOPE_ATTR_TV_TRIGGER_POLARITY
const NISCOPE_ATTR_GLITCH_CONDITION = IVISCOPE_ATTR_GLITCH_CONDITION
const NISCOPE_ATTR_GLITCH_WIDTH = IVISCOPE_ATTR_GLITCH_WIDTH
const NISCOPE_ATTR_GLITCH_POLARITY = IVISCOPE_ATTR_GLITCH_POLARITY
const NISCOPE_ATTR_WIDTH_CONDITION = IVISCOPE_ATTR_WIDTH_CONDITION
const NISCOPE_ATTR_WIDTH_LOW_THRESHOLD = IVISCOPE_ATTR_WIDTH_LOW_THRESHOLD
const NISCOPE_ATTR_WIDTH_HIGH_THRESHOLD = IVISCOPE_ATTR_WIDTH_HIGH_THRESHOLD
const NISCOPE_ATTR_WIDTH_POLARITY = IVISCOPE_ATTR_WIDTH_POLARITY
const NISCOPE_ATTR_RUNT_POLARITY = IVISCOPE_ATTR_RUNT_POLARITY
const NISCOPE_ATTR_RUNT_LOW_THRESHOLD = IVISCOPE_ATTR_RUNT_LOW_THRESHOLD
const NISCOPE_ATTR_RUNT_HIGH_THRESHOLD = IVISCOPE_ATTR_RUNT_HIGH_THRESHOLD
const NISCOPE_ATTR_MEAS_HIGH_REF = IVISCOPE_ATTR_MEAS_HIGH_REF
const NISCOPE_ATTR_MEAS_LOW_REF = IVISCOPE_ATTR_MEAS_LOW_REF
const NISCOPE_ATTR_MEAS_MID_REF = IVISCOPE_ATTR_MEAS_MID_REF
const NISCOPE_ATTR_HORZ_NUM_RECORDS = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(1)
const NISCOPE_ATTR_INPUT_CLOCK_SOURCE = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(2)
const NISCOPE_ATTR_OUTPUT_CLOCK_SOURCE = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(3)
const NISCOPE_ATTR_HORZ_ENFORCE_REALTIME = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(4)
const NISCOPE_ATTR_BINARY_SAMPLE_WIDTH = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(5)
const NISCOPE_ATTR_TRIGGER_HYSTERESIS = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(6)
const NISCOPE_ATTR_CLOCK_SYNC_PULSE_SOURCE = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(7)
const NISCOPE_ATTR_MASTER_ENABLE = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(8)
const NISCOPE_ATTR_MIN_SAMPLE_RATE = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(9)
const NISCOPE_ATTR_TRIGGER_WINDOW_MODE = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(12)
const NISCOPE_ATTR_TRIGGER_WINDOW_LOW_LEVEL = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(13)
const NISCOPE_ATTR_TRIGGER_WINDOW_HIGH_LEVEL = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(14)
const NISCOPE_ATTR_MEAS_REF_LEVEL_UNITS = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(16)
const NISCOPE_ATTR_MEAS_OTHER_CHANNEL = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(18)
const NISCOPE_ATTR_MEAS_HYSTERESIS_PERCENT = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(19)
const NISCOPE_ATTR_MEAS_LAST_ACQ_HISTOGRAM_SIZE = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(20)
const NISCOPE_ATTR_MEAS_VOLTAGE_HISTOGRAM_SIZE = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(21)
const NISCOPE_ATTR_MEAS_VOLTAGE_HISTOGRAM_LOW_VOLTS = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(22)
const NISCOPE_ATTR_MEAS_VOLTAGE_HISTOGRAM_HIGH_VOLTS = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(23)
const NISCOPE_ATTR_MEAS_TIME_HISTOGRAM_SIZE = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(24)
const NISCOPE_ATTR_MEAS_TIME_HISTOGRAM_LOW_VOLTS = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(25)
const NISCOPE_ATTR_MEAS_TIME_HISTOGRAM_HIGH_VOLTS = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(26)
const NISCOPE_ATTR_MEAS_TIME_HISTOGRAM_LOW_TIME = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(27)
const NISCOPE_ATTR_MEAS_TIME_HISTOGRAM_HIGH_TIME = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(28)
const NISCOPE_ATTR_MEAS_POLYNOMIAL_INTERPOLATION_ORDER = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(29)
const NISCOPE_ATTR_MEAS_INTERPOLATION_SAMPLING_FACTOR = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(30)
const NISCOPE_ATTR_MEAS_FILTER_CUTOFF_FREQ = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(31)
const NISCOPE_ATTR_MEAS_FILTER_CENTER_FREQ = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(32)
const NISCOPE_ATTR_MEAS_FILTER_RIPPLE = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(33)
const NISCOPE_ATTR_MEAS_FILTER_TRANSIENT_WAVEFORM_PERCENT = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(34)
const NISCOPE_ATTR_MEAS_FILTER_TYPE = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(35)
const NISCOPE_ATTR_MEAS_FILTER_ORDER = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(36)
const NISCOPE_ATTR_MEAS_FILTER_TAPS = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(37)
const NISCOPE_ATTR_MEAS_CHAN_LOW_REF_LEVEL = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(38)
const NISCOPE_ATTR_MEAS_CHAN_MID_REF_LEVEL = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(39)
const NISCOPE_ATTR_MEAS_CHAN_HIGH_REF_LEVEL = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(40)
const NISCOPE_ATTR_MEAS_FILTER_WIDTH = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(41)
const NISCOPE_ATTR_MEAS_FIR_FILTER_WINDOW = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(42)
const NISCOPE_ATTR_MEAS_ARRAY_GAIN = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(43)
const NISCOPE_ATTR_MEAS_ARRAY_OFFSET = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(44)
const NISCOPE_ATTR_MEAS_PERCENTAGE_METHOD = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(45)
const NISCOPE_ATTR_ACQ_ARM_SOURCE = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(53)
const NISCOPE_ATTR_IS_PROBE_COMP_ON = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(66)
const NISCOPE_ATTR_USE_SPEC_INITIAL_X = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(67)
const NISCOPE_ATTR_ALLOW_MORE_RECORDS_THAN_MEMORY = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(68)
const NISCOPE_ATTR_ONBOARD_MEMORY_SIZE = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(69)
const NISCOPE_ATTR_RIS_NUM_AVERAGES = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(70)
const NISCOPE_ATTR_RIS_METHOD = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(71)
const NISCOPE_ATTR_FETCH_INTERLEAVED_DATA = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(72)
const NISCOPE_ATTR_MAX_REAL_TIME_SAMPLING_RATE = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(73)
const NISCOPE_ATTR_MAX_RIS_RATE = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(74)
const NISCOPE_ATTR_TRIGGER_IMPEDANCE = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(75)
const NISCOPE_ATTR_DEVICE_NUMBER = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(76)
const NISCOPE_ATTR_FETCH_RELATIVE_TO = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(77)
const NISCOPE_ATTR_FETCH_OFFSET = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(78)
const NISCOPE_ATTR_FETCH_RECORD_NUMBER = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(79)
const NISCOPE_ATTR_FETCH_NUM_RECORDS = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(80)
const NISCOPE_ATTR_FETCH_MEAS_NUM_SAMPLES = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(81)
const NISCOPE_ATTR_POINTS_DONE = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(82)
const NISCOPE_ATTR_RECORDS_DONE = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(83)
const NISCOPE_ATTR_BACKLOG = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(84)
const NISCOPE_ATTR_POLL_INTERVAL = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(100)
const NISCOPE_ATTR_PLL_LOCK_STATUS = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(1303)
const NISCOPE_ATTR_DEVICE_TEMPERATURE = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(86)
const NISCOPE_ATTR_SAMP_CLK_TIMEBASE_SRC = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(87)
const NISCOPE_ATTR_SAMP_CLK_TIMEBASE_RATE = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(88)
const NISCOPE_ATTR_SAMP_CLK_TIMEBASE_DIV = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(89)
const NISCOPE_ATTR_REF_CLK_RATE = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(90)
const NISCOPE_ATTR_EXPORTED_SAMPLE_CLOCK_OUTPUT_TERMINAL = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(91)
const NISCOPE_ATTR_ENABLE_DC_RESTORE = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(93)
const NISCOPE_ATTR_ADV_TRIG_SRC = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(94)
const NISCOPE_ATTR_ARM_REF_TRIG_SRC = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(95)
const NISCOPE_ATTR_REF_TRIG_TDC_ENABLE = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(96)
const NISCOPE_ATTR_RESOLUTION = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(102)
const NISCOPE_ATTR_START_TO_REF_TRIGGER_HOLDOFF = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(103)
const NISCOPE_ATTR_SERIAL_NUMBER = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(104)
const NISCOPE_ATTR_OSCILLATOR_PHASE_DAC_VALUE = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(105)
const NISCOPE_ATTR_RIS_IN_AUTO_SETUP_ENABLE = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(106)
const NISCOPE_ATTR_CHANNEL_TERMINAL_CONFIGURATION = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(107)
const NISCOPE_ATTR_EXPORTED_ADVANCE_TRIGGER_OUTPUT_TERMINAL = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(109)
const NISCOPE_ATTR_READY_FOR_START_EVENT_OUTPUT_TERMINAL = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(110)
const NISCOPE_ATTR_READY_FOR_REF_EVENT_OUTPUT_TERMINAL = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(111)
const NISCOPE_ATTR_READY_FOR_ADVANCE_EVENT_OUTPUT_TERMINAL = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(112)
const NISCOPE_ATTR_FLEX_FIR_ANTIALIAS_FILTER_TYPE = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(271)
const NISCOPE_ATTR_DDC_ENABLED = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(300)
const NISCOPE_ATTR_DDC_FREQUENCY_TRANSLATION_ENABLED = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(302)
const NISCOPE_ATTR_DDC_CENTER_FREQUENCY = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(303)
const NISCOPE_ATTR_DDC_DATA_PROCESSING_MODE = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(304)
const NISCOPE_ATTR_DDC_FREQUENCY_TRANSLATION_PHASE_I = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(305)
const NISCOPE_ATTR_DDC_FREQUENCY_TRANSLATION_PHASE_Q = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(306)
const NISCOPE_ATTR_DIGITAL_GAIN = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(307)
const NISCOPE_ATTR_DIGITAL_OFFSET = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(308)
const NISCOPE_ATTR_OVERFLOW_ERROR_REPORTING = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(309)
const NISCOPE_ATTR_DDC_Q_SOURCE = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(310)
const NISCOPE_ATTR_FETCH_INTERLEAVED_IQ_DATA = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(311)
const NISCOPE_ATTR_EQUALIZATION_NUM_COEFFICIENTS = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(312)
const NISCOPE_ATTR_EQUALIZATION_FILTER_ENABLED = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(313)
const NISCOPE_ATTR_REF_TRIGGER_DETECTOR_LOCATION = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(314)
const NISCOPE_ATTR_REF_TRIGGER_MINIMUM_QUIET_TIME = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(315)
const NISCOPE_ATTR_ENABLE_TIME_INTERLEAVED_SAMPLING = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(128)
const NISCOPE_ATTR_DATA_TRANSFER_BLOCK_SIZE = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(316)
const NISCOPE_ATTR_TRIGGER_MODIFIER = IVISCOPE_ATTR_TRIGGER_MODIFIER
const NISCOPE_ATTR_TRIGGER_AUTO_TRIGGERED = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(278)
const NISCOPE_ATTR_EXPORTED_START_TRIGGER_OUTPUT_TERMINAL = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(97)
const NISCOPE_ATTR_EXPORTED_REF_TRIGGER_OUTPUT_TERMINAL = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(98)
const NISCOPE_ATTR_END_OF_RECORD_EVENT_OUTPUT_TERMINAL = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(99)
const NISCOPE_ATTR_END_OF_ACQUISITION_EVENT_OUTPUT_TERMINAL = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(101)
const NISCOPE_ATTR_5V_OUT_OUTPUT_TERMINAL = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(129)
const NISCOPE_ATTR_BANDPASS_FILTER_ENABLED = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(318)
const NISCOPE_ATTR_DITHER_ENABLED = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(319)
const NISCOPE_ATTR_FRACTIONAL_RESAMPLE_ENABLED = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(320)
const NISCOPE_ATTR_DATA_TRANSFER_MAXIMUM_BANDWIDTH = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(321)
const NISCOPE_ATTR_DATA_TRANSFER_PREFERRED_PACKET_SIZE = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(322)
const NISCOPE_ATTR_SIGNAL_COND_GAIN = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(279)
const NISCOPE_ATTR_SIGNAL_COND_OFFSET = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(280)
const NISCOPE_ATTR_P2P_ENABLED = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(338)
const NISCOPE_ATTR_P2P_CHANNELS_TO_STREAM = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(339)
const NISCOPE_ATTR_P2P_ENDPOINT_SIZE = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(342)
const NISCOPE_ATTR_P2P_SAMPLES_AVAIL_IN_ENDPOINT = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(328)
const NISCOPE_ATTR_P2P_MOST_SAMPLES_AVAIL_IN_ENDPOINT = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(341)
const NISCOPE_ATTR_P2P_SAMPLES_TRANSFERRED = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(340)
const NISCOPE_ATTR_P2P_ENDPOINT_OVERFLOW = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(344)
const NISCOPE_ATTR_P2P_FIFO_ENDPOINT_COUNT = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(345)
const NISCOPE_ATTR_P2P_ONBOARD_MEMORY_ENABLED = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(354)
const NISCOPE_ATTR_P2P_MANUAL_CONFIGURATION_ENABLED = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(343)
const NISCOPE_ATTR_P2P_DATA_TRANS_PERMISSION_ADDR = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(329)
const NISCOPE_ATTR_P2P_DATA_TRANS_PERMISSION_ADDR_TYPE = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(330)
const NISCOPE_ATTR_P2P_DESTINATION_WINDOW_ADDR = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(331)
const NISCOPE_ATTR_P2P_DESTINATION_WINDOW_ADDR_TYPE = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(332)
const NISCOPE_ATTR_P2P_DESTINATION_WINDOW_SIZE = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(333)
const NISCOPE_ATTR_P2P_NOTIFY_PUSH_MESSAGE_ON = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(334)
const NISCOPE_ATTR_P2P_NOTIFY_MESSAGE_PUSH_ADDR = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(335)
const NISCOPE_ATTR_P2P_NOTIFY_MESSAGE_PUSH_ADDR_TYPE = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(336)
const NISCOPE_ATTR_P2P_NOTIFY_MESSAGE_PUSH_VALUE = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(337)
const NISCOPE_ATTR_SAMP_CLK_TIMEBASE_MULT = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(367)
const NISCOPE_ATTR_P2P_STREAM_RELATIVE_TO = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(373)
const NISCOPE_ATTR_P2P_SAMPLES_TRANSFERRED_PER_RECORD = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(380)
const NISCOPE_ATTR_END_OF_RECORD_TO_ADVANCE_TRIGGER_HOLDOFF = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(366)
const NISCOPE_ATTR_ABSOLUTE_SAMPLE_CLOCK_OFFSET = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(374)
const NISCOPE_ATTR_FPGA_BITFILE_PATH = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(375)
const NISCOPE_ATTR_INTERLEAVING_OFFSET_CORRECTION_ENABLED = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(376)
const NISCOPE_ATTR_HIGH_PASS_FILTER_FREQUENCY = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(377)
const NISCOPE_ATTR_RUNT_TIME_CONDITION = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(132)
const NISCOPE_ATTR_RUNT_TIME_LOW_LIMIT = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(133)
const NISCOPE_ATTR_RUNT_TIME_HIGH_LIMIT = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(134)
const NISCOPE_ATTR_CABLE_SENSE_VOLTAGE = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(137)
const NISCOPE_ATTR_CABLE_SENSE_MODE = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(138)
const NISCOPE_ATTR_CABLE_SENSE_SIGNAL_ENABLE = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(139)
const NISCOPE_ATTR_ENABLED_CHANNELS = IVI_SPECIFIC_PUBLIC_ATTR_BASE + Int32(140)
const NISCOPE_VAL_RIS_EXACT_NUM_AVERAGES = 1
const NISCOPE_VAL_RIS_MIN_NUM_AVERAGES = 2
const NISCOPE_VAL_RIS_INCOMPLETE = 3
const NISCOPE_VAL_RIS_LIMITED_BIN_WIDTH = 5
const NISCOPE_VAL_SOFTWARE_TRIGGER_START = 0
const NISCOPE_VAL_SOFTWARE_TRIGGER_ARM_REFERENCE = 1
const NISCOPE_VAL_SOFTWARE_TRIGGER_REFERENCE = 2
const NISCOPE_VAL_SOFTWARE_TRIGGER_ADVANCE = 3
const NISCOPE_VAL_AC = IVISCOPE_VAL_AC
const NISCOPE_VAL_DC = IVISCOPE_VAL_DC
const NISCOPE_VAL_GND = IVISCOPE_VAL_GND
const NISCOPE_VAL_BANDWIDTH_FULL = -1.0
const NISCOPE_VAL_BANDWIDTH_DEVICE_DEFAULT = 0.0
const NISCOPE_VAL_20MHZ_BANDWIDTH = 2.0e7
const NISCOPE_VAL_100MHZ_BANDWIDTH = 1.0e8
const NISCOPE_VAL_20MHZ_MAX_INPUT_FREQUENCY = 2.0e7
const NISCOPE_VAL_100MHZ_MAX_INPUT_FREQUENCY = 1.0e8
const NISCOPE_VAL_50_OHMS = 50.0
const NISCOPE_VAL_75_OHMS = 75.0
const NISCOPE_VAL_1_MEG_OHM = 1.0e6
const NISCOPE_VAL_EDGE_TRIGGER = IVISCOPE_VAL_EDGE_TRIGGER
const NISCOPE_VAL_HYSTERESIS_TRIGGER = IVISCOPE_VAL_TRIGGER_TYPE_SPECIFIC_EXT_BASE + Int32(1)
const NISCOPE_VAL_DIGITAL_TRIGGER = IVISCOPE_VAL_TRIGGER_TYPE_SPECIFIC_EXT_BASE + Int32(2)
const NISCOPE_VAL_WINDOW_TRIGGER = IVISCOPE_VAL_TRIGGER_TYPE_SPECIFIC_EXT_BASE + Int32(3)
const NISCOPE_VAL_SOFTWARE_TRIGGER = IVISCOPE_VAL_TRIGGER_TYPE_SPECIFIC_EXT_BASE + Int32(4)
const NISCOPE_VAL_TV_TRIGGER = IVISCOPE_VAL_TV_TRIGGER
const NISCOPE_VAL_GLITCH_TRIGGER = IVISCOPE_VAL_GLITCH_TRIGGER
const NISCOPE_VAL_WIDTH_TRIGGER = IVISCOPE_VAL_WIDTH_TRIGGER
const NISCOPE_VAL_RUNT_TRIGGER = IVISCOPE_VAL_RUNT_TRIGGER
const NISCOPE_VAL_IMMEDIATE_TRIGGER = IVISCOPE_VAL_IMMEDIATE_TRIGGER
const NISCOPE_VAL_IMMEDIATE = "VAL_IMMEDIATE"
const NISCOPE_VAL_EXTERNAL = IVISCOPE_VAL_EXTERNAL
const NISCOPE_VAL_SW_TRIG_FUNC = "VAL_SW_TRIG_FUNC"
const NISCOPE_VAL_TTL0 = IVISCOPE_VAL_TTL0
const NISCOPE_VAL_TTL1 = IVISCOPE_VAL_TTL1
const NISCOPE_VAL_TTL2 = IVISCOPE_VAL_TTL2
const NISCOPE_VAL_TTL3 = IVISCOPE_VAL_TTL3
const NISCOPE_VAL_TTL4 = IVISCOPE_VAL_TTL4
const NISCOPE_VAL_TTL5 = IVISCOPE_VAL_TTL5
const NISCOPE_VAL_TTL6 = IVISCOPE_VAL_TTL6
const NISCOPE_VAL_TTL7 = IVISCOPE_VAL_TTL7
const NISCOPE_VAL_ECL0 = IVISCOPE_VAL_ECL0
const NISCOPE_VAL_ECL1 = IVISCOPE_VAL_ECL1
const NISCOPE_VAL_PXI_STAR = IVISCOPE_VAL_PXI_STAR
const NISCOPE_VAL_RTSI_0 = IVISCOPE_VAL_RTSI_0
const NISCOPE_VAL_RTSI_1 = IVISCOPE_VAL_RTSI_1
const NISCOPE_VAL_RTSI_2 = IVISCOPE_VAL_RTSI_2
const NISCOPE_VAL_RTSI_3 = IVISCOPE_VAL_RTSI_3
const NISCOPE_VAL_RTSI_4 = IVISCOPE_VAL_RTSI_4
const NISCOPE_VAL_RTSI_5 = IVISCOPE_VAL_RTSI_5
const NISCOPE_VAL_RTSI_6 = IVISCOPE_VAL_RTSI_6
const NISCOPE_VAL_RTSI_7 = "VAL_RTSI_7"
const NISCOPE_VAL_PFI_0 = "VAL_PFI_0"
const NISCOPE_VAL_PFI_1 = "VAL_PFI_1"
const NISCOPE_VAL_PFI_2 = "VAL_PFI_2"
const NISCOPE_VAL_PFI_3 = "VAL_PFI_3"
const NISCOPE_VAL_PFI_4 = "VAL_PFI_4"
const NISCOPE_VAL_PFI_5 = "VAL_PFI_5"
const NISCOPE_VAL_PFI_6 = "VAL_PFI_6"
const NISCOPE_VAL_PFI_7 = "VAL_PFI_7"
const NISCOPE_VAL_AUX_0_PFI_0 = "VAL_AUX_0_PFI_0"
const NISCOPE_VAL_AUX_0_PFI_1 = "VAL_AUX_0_PFI_1"
const NISCOPE_VAL_AUX_0_PFI_3 = "VAL_AUX_0_PFI_3"
const NISCOPE_VAL_AUX_0_PFI_4 = "VAL_AUX_0_PFI_4"
const NISCOPE_VAL_AUX_0_PFI_5 = "VAL_AUX_0_PFI_5"
const NISCOPE_VAL_AUX_0_PFI_6 = "VAL_AUX_0_PFI_6"
const NISCOPE_VAL_AUX_0_PFI_7 = "VAL_AUX_0_PFI_7"
const NISCOPE_VAL_AUX_0_PFI_2 = "VAL_AUX_0_PFI_2"
const NISCOPE_VAL_READ_POINTER = 388
const NISCOPE_VAL_PRETRIGGER = 477
const NISCOPE_VAL_NOW = 481
const NISCOPE_VAL_START = 482
const NISCOPE_VAL_TRIGGER = 483
const NISCOPE_VAL_NO_TRIGGER_MOD = IVISCOPE_VAL_NO_TRIGGER_MOD
const NISCOPE_VAL_AUTO = IVISCOPE_VAL_AUTO
const NISCOPE_VAL_AUTO_LEVEL = IVISCOPE_VAL_AUTO_LEVEL
const NISCOPE_VAL_HF_REJECT = IVISCOPE_VAL_HF_REJECT
const NISCOPE_VAL_LF_REJECT = IVISCOPE_VAL_LF_REJECT
const NISCOPE_VAL_AC_PLUS_HF_REJECT = IVISCOPE_VAL_TRIGGER_COUPLING_SPECIFIC_EXT_BASE + Int32(1)
const NISCOPE_VAL_NEGATIVE = IVISCOPE_VAL_NEGATIVE
const NISCOPE_VAL_POSITIVE = IVISCOPE_VAL_POSITIVE
const NISCOPE_VAL_SLOPE_EITHER = 3
const NISCOPE_VAL_NORMAL = IVISCOPE_VAL_NORMAL
const NISCOPE_VAL_FLEXRES = IVISCOPE_VAL_ACQUISITION_TYPE_SPECIFIC_EXT_BASE + Int32(1)
const NISCOPE_VAL_DDC = IVISCOPE_VAL_ACQUISITION_TYPE_SPECIFIC_EXT_BASE + Int32(2)
const NISCOPE_VAL_NO_INTERPOLATION = IVISCOPE_VAL_NO_INTERPOLATION
const NISCOPE_VAL_SINE_X = IVISCOPE_VAL_SINE_X
const NISCOPE_VAL_LINEAR = IVISCOPE_VAL_LINEAR
const NISCOPE_VAL_NTSC = IVISCOPE_VAL_NTSC
const NISCOPE_VAL_PAL = IVISCOPE_VAL_PAL
const NISCOPE_VAL_SECAM = IVISCOPE_VAL_SECAM
const NISCOPE_VAL_M_PAL = IVISCOPE_VAL_TV_SIGNAL_FORMAT_SPECIFIC_EXT_BASE + Int32(1)
const NISCOPE_VAL_480I_59_94_FIELDS_PER_SECOND = IVISCOPE_VAL_TV_SIGNAL_FORMAT_SPECIFIC_EXT_BASE + Int32(10)
const NISCOPE_VAL_480I_60_FIELDS_PER_SECOND = IVISCOPE_VAL_TV_SIGNAL_FORMAT_SPECIFIC_EXT_BASE + Int32(11)
const NISCOPE_VAL_480P_59_94_FRAMES_PER_SECOND = IVISCOPE_VAL_TV_SIGNAL_FORMAT_SPECIFIC_EXT_BASE + Int32(15)
const NISCOPE_VAL_480P_60_FRAMES_PER_SECOND = IVISCOPE_VAL_TV_SIGNAL_FORMAT_SPECIFIC_EXT_BASE + Int32(16)
const NISCOPE_VAL_576I_50_FIELDS_PER_SECOND = IVISCOPE_VAL_TV_SIGNAL_FORMAT_SPECIFIC_EXT_BASE + Int32(20)
const NISCOPE_VAL_576P_50_FRAMES_PER_SECOND = IVISCOPE_VAL_TV_SIGNAL_FORMAT_SPECIFIC_EXT_BASE + Int32(25)
const NISCOPE_VAL_720P_50_FRAMES_PER_SECOND = IVISCOPE_VAL_TV_SIGNAL_FORMAT_SPECIFIC_EXT_BASE + Int32(31)
const NISCOPE_VAL_720P_59_94_FRAMES_PER_SECOND = IVISCOPE_VAL_TV_SIGNAL_FORMAT_SPECIFIC_EXT_BASE + Int32(32)
const NISCOPE_VAL_720P_60_FRAMES_PER_SECOND = IVISCOPE_VAL_TV_SIGNAL_FORMAT_SPECIFIC_EXT_BASE + Int32(33)
const NISCOPE_VAL_1080I_50_FIELDS_PER_SECOND = IVISCOPE_VAL_TV_SIGNAL_FORMAT_SPECIFIC_EXT_BASE + Int32(40)
const NISCOPE_VAL_1080I_59_94_FIELDS_PER_SECOND = IVISCOPE_VAL_TV_SIGNAL_FORMAT_SPECIFIC_EXT_BASE + Int32(41)
const NISCOPE_VAL_1080I_60_FIELDS_PER_SECOND = IVISCOPE_VAL_TV_SIGNAL_FORMAT_SPECIFIC_EXT_BASE + Int32(42)
const NISCOPE_VAL_1080P_24_FRAMES_PER_SECOND = IVISCOPE_VAL_TV_SIGNAL_FORMAT_SPECIFIC_EXT_BASE + Int32(45)
const NISCOPE_VAL_TV_POSITIVE = IVISCOPE_VAL_TV_POSITIVE
const NISCOPE_VAL_TV_NEGATIVE = IVISCOPE_VAL_TV_NEGATIVE
const NISCOPE_VAL_TV_EVENT_FIELD1 = IVISCOPE_VAL_TV_EVENT_FIELD1
const NISCOPE_VAL_TV_EVENT_FIELD2 = IVISCOPE_VAL_TV_EVENT_FIELD2
const NISCOPE_VAL_TV_EVENT_ANY_FIELD = IVISCOPE_VAL_TV_EVENT_ANY_FIELD
const NISCOPE_VAL_TV_EVENT_ANY_LINE = IVISCOPE_VAL_TV_EVENT_ANY_LINE
const NISCOPE_VAL_TV_EVENT_LINE_NUMBER = IVISCOPE_VAL_TV_EVENT_LINE_NUMBER
const NISCOPE_VAL_GLITCH_GREATER_THAN = IVISCOPE_VAL_GLITCH_GREATER_THAN
const NISCOPE_VAL_GLITCH_LESS_THAN = IVISCOPE_VAL_GLITCH_LESS_THAN
const NISCOPE_VAL_GLITCH_POSITIVE = IVISCOPE_VAL_GLITCH_POSITIVE
const NISCOPE_VAL_GLITCH_NEGATIVE = IVISCOPE_VAL_GLITCH_NEGATIVE
const NISCOPE_VAL_GLITCH_EITHER = IVISCOPE_VAL_GLITCH_EITHER
const NISCOPE_VAL_WIDTH_WITHIN = IVISCOPE_VAL_WIDTH_WITHIN
const NISCOPE_VAL_WIDTH_OUTSIDE = IVISCOPE_VAL_WIDTH_OUTSIDE
const NISCOPE_VAL_WIDTH_POSITIVE = IVISCOPE_VAL_WIDTH_POSITIVE
const NISCOPE_VAL_WIDTH_NEGATIVE = IVISCOPE_VAL_WIDTH_NEGATIVE
const NISCOPE_VAL_WIDTH_EITHER = IVISCOPE_VAL_WIDTH_EITHER
const NISCOPE_VAL_RUNT_POSITIVE = IVISCOPE_VAL_RUNT_POSITIVE
const NISCOPE_VAL_RUNT_NEGATIVE = IVISCOPE_VAL_RUNT_NEGATIVE
const NISCOPE_VAL_RUNT_EITHER = IVISCOPE_VAL_RUNT_EITHER
const NISCOPE_VAL_RUNT_TIME_CONDITION_NONE = 0
const NISCOPE_VAL_RUNT_TIME_CONDITION_WITHIN = 1
const NISCOPE_VAL_RUNT_TIME_CONDITION_OUTSIDE = 2
const NISCOPE_VAL_CABLE_SENSE_MODE_DISABLED = 0
const NISCOPE_VAL_CABLE_SENSE_MODE_ON_DEMAND = 1
const NISCOPE_VAL_REAL_TIME = IVISCOPE_VAL_REAL_TIME
const NISCOPE_VAL_EQUIVALENT_TIME = IVISCOPE_VAL_EQUIVALENT_TIME
const NISCOPE_VAL_NO_SOURCE = "VAL_NO_SOURCE"
const NISCOPE_VAL_RTSI_CLOCK = "VAL_RTSI_CLOCK"
const NISCOPE_VAL_CLK_IN = "VAL_CLK_IN"
const NISCOPE_VAL_CLK_OUT = "VAL_CLK_OUT"
const NISCOPE_VAL_INTERNAL10MHZ_OSC = "VAL_INTERNAL10MHZ_OSC"
const NISCOPE_VAL_PXI_CLK = "VAL_PXI_CLK"
const NISCOPE_VAL_PXI_CLK10 = "VAL_PXI_CLK10"
const NISCOPE_VAL_PXI_CLK100 = "VAL_PXI_CLK100"
const NISCOPE_VAL_PXIE_DSTAR_A = "VAL_PXIE_DSTAR_A"
const NISCOPE_VAL_AUX_0_CLK_IN = "VAL_AUX_0_CLK_IN"
const NISCOPE_VAL_AUX_0_CLK_OUT = "VAL_AUX_0_CLK_OUT"
const NISCOPE_VAL_ONBOARD_CONFIGURABLE_RATE_CLK = "VAL_ONBOARD_CONFIGURABLE_RATE_CLK"
const NISCOPE_VAL_REF_TRIGGER = 1
const NISCOPE_VAL_START_TRIGGER = 2
const NISCOPE_VAL_END_OF_ACQUISITION_EVENT = 3
const NISCOPE_VAL_END_OF_RECORD_EVENT = 4
const NISCOPE_VAL_ADVANCE_TRIGGER = 5
const NISCOPE_VAL_READY_FOR_ADVANCE_EVENT = 6
const NISCOPE_VAL_READY_FOR_START_EVENT = 7
const NISCOPE_VAL_READY_FOR_REF_EVENT = 10
const NISCOPE_VAL_5V_OUT = 13
const NISCOPE_VAL_REF_CLOCK = 100
const NISCOPE_VAL_SAMPLE_CLOCK = 101
const NISCOPE_VAL_ENTERING_WINDOW = 0
const NISCOPE_VAL_LEAVING_WINDOW = 1
const NISCOPE_VAL_ENTERING_OR_LEAVING_WINDOW = 2
const NISCOPE_VAL_MAX_TIME_INFINITE = UInt32(0xffffffff)
const NISCOPE_VAL_MAX_TIME_IMMEDIATE = 0
const NISCOPE_VAL_MAX_TIME_NONE = 0
const NISCOPE_VAL_ACQ_COMPLETE = IVISCOPE_VAL_ACQ_COMPLETE
const NISCOPE_VAL_ACQ_IN_PROGRESS = IVISCOPE_VAL_ACQ_IN_PROGRESS
const NISCOPE_VAL_ACQ_STATUS_UNKNOWN = IVISCOPE_VAL_ACQ_STATUS_UNKNOWN
const NISCOPE_VAL_MEAS_LOWPASS = 0
const NISCOPE_VAL_MEAS_HIGHPASS = 1
const NISCOPE_VAL_MEAS_BANDPASS = 2
const NISCOPE_VAL_MEAS_BANDSTOP = 3
const NISCOPE_VAL_MEAS_LOW_HIGH = 0
const NISCOPE_VAL_MEAS_MIN_MAX = 1
const NISCOPE_VAL_MEAS_BASE_TOP = 2
const NISCOPE_VAL_MEAS_VOLTAGE = 0
const NISCOPE_VAL_MEAS_PERCENTAGE = 1
const NISCOPE_VAL_NO_MEASUREMENT = 4000
const NISCOPE_VAL_RISE_TIME = IVISCOPE_VAL_RISE_TIME
const NISCOPE_VAL_FALL_TIME = IVISCOPE_VAL_FALL_TIME
const NISCOPE_VAL_FREQUENCY = IVISCOPE_VAL_FREQUENCY
const NISCOPE_VAL_PERIOD = IVISCOPE_VAL_PERIOD
const NISCOPE_VAL_VOLTAGE_RMS = IVISCOPE_VAL_VOLTAGE_RMS
const NISCOPE_VAL_VOLTAGE_PEAK_TO_PEAK = IVISCOPE_VAL_VOLTAGE_PEAK_TO_PEAK
const NISCOPE_VAL_VOLTAGE_MAX = IVISCOPE_VAL_VOLTAGE_MAX
const NISCOPE_VAL_VOLTAGE_MIN = IVISCOPE_VAL_VOLTAGE_MIN
const NISCOPE_VAL_VOLTAGE_HIGH = IVISCOPE_VAL_VOLTAGE_HIGH
const NISCOPE_VAL_VOLTAGE_LOW = IVISCOPE_VAL_VOLTAGE_LOW
const NISCOPE_VAL_VOLTAGE_AVERAGE = IVISCOPE_VAL_VOLTAGE_AVERAGE
const NISCOPE_VAL_WIDTH_NEG = IVISCOPE_VAL_WIDTH_NEG
const NISCOPE_VAL_WIDTH_POS = IVISCOPE_VAL_WIDTH_POS
const NISCOPE_VAL_DUTY_CYCLE_NEG = IVISCOPE_VAL_DUTY_CYCLE_NEG
const NISCOPE_VAL_DUTY_CYCLE_POS = IVISCOPE_VAL_DUTY_CYCLE_POS
const NISCOPE_VAL_AMPLITUDE = IVISCOPE_VAL_AMPLITUDE
const NISCOPE_VAL_VOLTAGE_CYCLE_RMS = IVISCOPE_VAL_VOLTAGE_CYCLE_RMS
const NISCOPE_VAL_VOLTAGE_CYCLE_AVERAGE = IVISCOPE_VAL_VOLTAGE_CYCLE_AVERAGE
const NISCOPE_VAL_OVERSHOOT = IVISCOPE_VAL_OVERSHOOT
const NISCOPE_VAL_PRESHOOT = IVISCOPE_VAL_PRESHOOT
const NISCOPE_VAL_LOW_REF_VOLTS = IVISCOPE_VAL_MEASUREMENT_FUNCTION_SPECIFIC_EXT_BASE + Int32(0)
const NISCOPE_VAL_MID_REF_VOLTS = IVISCOPE_VAL_MEASUREMENT_FUNCTION_SPECIFIC_EXT_BASE + Int32(1)
const NISCOPE_VAL_HIGH_REF_VOLTS = IVISCOPE_VAL_MEASUREMENT_FUNCTION_SPECIFIC_EXT_BASE + Int32(2)
const NISCOPE_VAL_AREA = IVISCOPE_VAL_MEASUREMENT_FUNCTION_SPECIFIC_EXT_BASE + Int32(3)
const NISCOPE_VAL_CYCLE_AREA = IVISCOPE_VAL_MEASUREMENT_FUNCTION_SPECIFIC_EXT_BASE + Int32(4)
const NISCOPE_VAL_INTEGRAL = IVISCOPE_VAL_MEASUREMENT_FUNCTION_SPECIFIC_EXT_BASE + Int32(5)
const NISCOPE_VAL_VOLTAGE_BASE = IVISCOPE_VAL_MEASUREMENT_FUNCTION_SPECIFIC_EXT_BASE + Int32(6)
const NISCOPE_VAL_VOLTAGE_TOP = IVISCOPE_VAL_MEASUREMENT_FUNCTION_SPECIFIC_EXT_BASE + Int32(7)
const NISCOPE_VAL_FFT_FREQUENCY = IVISCOPE_VAL_MEASUREMENT_FUNCTION_SPECIFIC_EXT_BASE + Int32(8)
const NISCOPE_VAL_FFT_AMPLITUDE = IVISCOPE_VAL_MEASUREMENT_FUNCTION_SPECIFIC_EXT_BASE + Int32(9)
const NISCOPE_VAL_RISE_SLEW_RATE = IVISCOPE_VAL_MEASUREMENT_FUNCTION_SPECIFIC_EXT_BASE + Int32(10)
const NISCOPE_VAL_FALL_SLEW_RATE = IVISCOPE_VAL_MEASUREMENT_FUNCTION_SPECIFIC_EXT_BASE + Int32(11)
const NISCOPE_VAL_AC_ESTIMATE = IVISCOPE_VAL_MEASUREMENT_FUNCTION_SPECIFIC_EXT_BASE + Int32(12)
const NISCOPE_VAL_DC_ESTIMATE = IVISCOPE_VAL_MEASUREMENT_FUNCTION_SPECIFIC_EXT_BASE + Int32(13)
const NISCOPE_VAL_TIME_DELAY = IVISCOPE_VAL_MEASUREMENT_FUNCTION_SPECIFIC_EXT_BASE + Int32(14)
const NISCOPE_VAL_AVERAGE_PERIOD = IVISCOPE_VAL_MEASUREMENT_FUNCTION_SPECIFIC_EXT_BASE + Int32(15)
const NISCOPE_VAL_AVERAGE_FREQUENCY = IVISCOPE_VAL_MEASUREMENT_FUNCTION_SPECIFIC_EXT_BASE + Int32(16)
const NISCOPE_VAL_VOLTAGE_BASE_TO_TOP = IVISCOPE_VAL_MEASUREMENT_FUNCTION_SPECIFIC_EXT_BASE + Int32(17)
const NISCOPE_VAL_PHASE_DELAY = IVISCOPE_VAL_MEASUREMENT_FUNCTION_SPECIFIC_EXT_BASE + Int32(18)
const NISCOPE_VAL_VOLTAGE_HISTOGRAM_MEAN = IVISCOPE_VAL_MEASUREMENT_FUNCTION_SPECIFIC_EXT_BASE + Int32(1000)
const NISCOPE_VAL_VOLTAGE_HISTOGRAM_STDEV = IVISCOPE_VAL_MEASUREMENT_FUNCTION_SPECIFIC_EXT_BASE + Int32(1001)
const NISCOPE_VAL_VOLTAGE_HISTOGRAM_PEAK_TO_PEAK = IVISCOPE_VAL_MEASUREMENT_FUNCTION_SPECIFIC_EXT_BASE + Int32(1002)
const NISCOPE_VAL_VOLTAGE_HISTOGRAM_MEDIAN = IVISCOPE_VAL_MEASUREMENT_FUNCTION_SPECIFIC_EXT_BASE + Int32(1003)
const NISCOPE_VAL_VOLTAGE_HISTOGRAM_HITS = IVISCOPE_VAL_MEASUREMENT_FUNCTION_SPECIFIC_EXT_BASE + Int32(1004)
const NISCOPE_VAL_VOLTAGE_HISTOGRAM_MAX = IVISCOPE_VAL_MEASUREMENT_FUNCTION_SPECIFIC_EXT_BASE + Int32(1005)
const NISCOPE_VAL_VOLTAGE_HISTOGRAM_MIN = IVISCOPE_VAL_MEASUREMENT_FUNCTION_SPECIFIC_EXT_BASE + Int32(1006)
const NISCOPE_VAL_VOLTAGE_HISTOGRAM_MEAN_PLUS_STDEV = IVISCOPE_VAL_MEASUREMENT_FUNCTION_SPECIFIC_EXT_BASE + Int32(1007)
const NISCOPE_VAL_VOLTAGE_HISTOGRAM_MEAN_PLUS_2_STDEV = IVISCOPE_VAL_MEASUREMENT_FUNCTION_SPECIFIC_EXT_BASE + Int32(1008)
const NISCOPE_VAL_VOLTAGE_HISTOGRAM_MEAN_PLUS_3_STDEV = IVISCOPE_VAL_MEASUREMENT_FUNCTION_SPECIFIC_EXT_BASE + Int32(1009)
const NISCOPE_VAL_VOLTAGE_HISTOGRAM_MODE = IVISCOPE_VAL_MEASUREMENT_FUNCTION_SPECIFIC_EXT_BASE + Int32(1010)
const NISCOPE_VAL_VOLTAGE_HISTOGRAM_NEW_HITS = IVISCOPE_VAL_MEASUREMENT_FUNCTION_SPECIFIC_EXT_BASE + Int32(1011)
const NISCOPE_VAL_TIME_HISTOGRAM_MEAN = IVISCOPE_VAL_MEASUREMENT_FUNCTION_SPECIFIC_EXT_BASE + Int32(2000)
const NISCOPE_VAL_TIME_HISTOGRAM_STDEV = IVISCOPE_VAL_MEASUREMENT_FUNCTION_SPECIFIC_EXT_BASE + Int32(2001)
const NISCOPE_VAL_TIME_HISTOGRAM_PEAK_TO_PEAK = IVISCOPE_VAL_MEASUREMENT_FUNCTION_SPECIFIC_EXT_BASE + Int32(2002)
const NISCOPE_VAL_TIME_HISTOGRAM_MEDIAN = IVISCOPE_VAL_MEASUREMENT_FUNCTION_SPECIFIC_EXT_BASE + Int32(2003)
const NISCOPE_VAL_TIME_HISTOGRAM_HITS = IVISCOPE_VAL_MEASUREMENT_FUNCTION_SPECIFIC_EXT_BASE + Int32(2004)
const NISCOPE_VAL_TIME_HISTOGRAM_MAX = IVISCOPE_VAL_MEASUREMENT_FUNCTION_SPECIFIC_EXT_BASE + Int32(2005)
const NISCOPE_VAL_TIME_HISTOGRAM_MIN = IVISCOPE_VAL_MEASUREMENT_FUNCTION_SPECIFIC_EXT_BASE + Int32(2006)
const NISCOPE_VAL_TIME_HISTOGRAM_MEAN_PLUS_STDEV = IVISCOPE_VAL_MEASUREMENT_FUNCTION_SPECIFIC_EXT_BASE + Int32(2007)
const NISCOPE_VAL_TIME_HISTOGRAM_MEAN_PLUS_2_STDEV = IVISCOPE_VAL_MEASUREMENT_FUNCTION_SPECIFIC_EXT_BASE + Int32(2008)
const NISCOPE_VAL_TIME_HISTOGRAM_MEAN_PLUS_3_STDEV = IVISCOPE_VAL_MEASUREMENT_FUNCTION_SPECIFIC_EXT_BASE + Int32(2009)
const NISCOPE_VAL_TIME_HISTOGRAM_MODE = IVISCOPE_VAL_MEASUREMENT_FUNCTION_SPECIFIC_EXT_BASE + Int32(2010)
const NISCOPE_VAL_TIME_HISTOGRAM_NEW_HITS = IVISCOPE_VAL_MEASUREMENT_FUNCTION_SPECIFIC_EXT_BASE + Int32(2011)
const NISCOPE_VAL_LAST_ACQ_HISTOGRAM = 4001
const NISCOPE_VAL_FFT_PHASE_SPECTRUM = 4002
const NISCOPE_VAL_FFT_AMP_SPECTRUM_VOLTS_RMS = 4003
const NISCOPE_VAL_MULTI_ACQ_VOLTAGE_HISTOGRAM = 4004
const NISCOPE_VAL_MULTI_ACQ_TIME_HISTOGRAM = 4005
const NISCOPE_VAL_ARRAY_INTEGRAL = 4006
const NISCOPE_VAL_DERIVATIVE = 4007
const NISCOPE_VAL_INVERSE = 4008
const NISCOPE_VAL_HANNING_WINDOW = 4009
const NISCOPE_VAL_FLAT_TOP_WINDOW = 4010
const NISCOPE_VAL_POLYNOMIAL_INTERPOLATION = 4011
const NISCOPE_VAL_MULTIPLY_CHANNELS = 4012
const NISCOPE_VAL_ADD_CHANNELS = 4013
const NISCOPE_VAL_SUBTRACT_CHANNELS = 4014
const NISCOPE_VAL_DIVIDE_CHANNELS = 4015
const NISCOPE_VAL_MULTI_ACQ_AVERAGE = 4016
const NISCOPE_VAL_BUTTERWORTH_FILTER = 4017
const NISCOPE_VAL_CHEBYSHEV_FILTER = 4018
const NISCOPE_VAL_FFT_AMP_SPECTRUM_DB = 4019
const NISCOPE_VAL_HAMMING_WINDOW = 4020
const NISCOPE_VAL_WINDOWED_FIR_FILTER = 4021
const NISCOPE_VAL_BESSEL_FILTER = 4022
const NISCOPE_VAL_TRIANGLE_WINDOW = 4023
const NISCOPE_VAL_BLACKMAN_WINDOW = 4024
const NISCOPE_VAL_ARRAY_OFFSET = 4025
const NISCOPE_VAL_ARRAY_GAIN = 4026
const NISCOPE_VAL_REAL = 0
const NISCOPE_VAL_COMPLEX = 1
const NISCOPE_VAL_SINGLE_ENDED = 0
const NISCOPE_VAL_UNBALANCED_DIFFERENTIAL = 1
const NISCOPE_VAL_DIFFERENTIAL = 2
const NISCOPE_VAL_48_TAP_STANDARD = 0
const NISCOPE_VAL_48_TAP_HANNING = 1
const NISCOPE_VAL_16_TAP_HANNING = 2
const NISCOPE_VAL_8_TAP_HANNING = 3
const NISCOPE_VAL_ERROR_REPORTING_ERROR = 0
const NISCOPE_VAL_ERROR_REPORTING_WARNING = 1
const NISCOPE_VAL_ERROR_REPORTING_DISABLED = 2
const NISCOPE_VAL_ANALOG_DETECTION_CIRCUIT = 0
const NISCOPE_VAL_DDC_OUTPUT = 1
const NISCOPE_VAL_ADDR_PHYSICAL = 0
const NISCOPE_VAL_ADDR_VIRTUAL = 1
const NISCOPE_VAL_NOTIFY_NEVER = 0
const NISCOPE_VAL_NOTIFY_DONE = 1
const NISCOPE_VAL_STREAM_RELATIVE_TO_START_TRIGGER = 0
const NISCOPE_VAL_STREAM_RELATIVE_TO_REFERENCE_TRIGGER = 1
const NISCOPE_VAL_STREAM_RELATIVE_TO_SYNC_TRIGGER = 2
const NISCOPE_VAL_INPUT = 0
const NISCOPE_VAL_OUTPUT = 1
const NISCOPE_VAL_NONE = 0
const NISCOPE_VAL_TRUE = VI_TRUE
const NISCOPE_VAL_FALSE = VI_FALSE
const NISCOPE_VAL_SELF_CALIBRATION = 0
const NISCOPE_VAL_EXTERNAL_CALIBRATION = 1
const NISCOPE_VAL_RESTORE_FACTORY_CALIBRATION = 2
const NISCOPE_VAL_CAL_RESTORE_EXTERNAL_CALIBRATION = NISCOPE_VAL_RESTORE_FACTORY_CALIBRATION
const NISCOPE_VAL_ALL_MEASUREMENTS = 10000
const NISCOPE_WARN_INVALID_WFM_ELEMENT = IVISCOPE_WARN_INVALID_WFM_ELEMENT
const NISCOPE_WARN_HEATER_CIRCUIT_TEMPERATURE = IVI_SPECIFIC_WARN_BASE + Int32(1)
const NISCOPE_WARN_INVALID_DATA = IVI_SPECIFIC_WARN_BASE + Int32(2)
const NISCOPE_WARN_CHANNEL_OVERLOAD = IVI_SPECIFIC_WARN_BASE + Int32(3)
const NISCOPE_WARN_AUTOSETUP_NO_SIGNAL = IVI_SPECIFIC_WARN_BASE + Int32(4)
const NISCOPE_WARN_PLL_UNLOCKED = IVI_SPECIFIC_WARN_BASE + Int32(5)
const NISCOPE_WARN_PLL_UNLOCKED_AND_ADC_OVERLOAD = IVI_SPECIFIC_WARN_BASE + Int32(6)
const NISCOPE_WARN_TIMESTAMP_ROLLOVER = IVI_SPECIFIC_WARN_BASE + Int32(7)
const NISCOPE_WARN_ADC_OVERLOAD = IVI_SPECIFIC_WARN_BASE + Int32(8)
const NISCOPE_WARN_P2P_OVERFLOW = IVI_SPECIFIC_WARN_BASE + Int32(9)
const NISCOPE_ERROR_CHANNEL_NOT_ENABLED = IVISCOPE_ERROR_CHANNEL_NOT_ENABLED
const NISCOPE_ERROR_UNABLE_TO_PERFORM_MEASUREMENT = IVISCOPE_ERROR_UNABLE_TO_PERFORM_MEASUREMENT
const NISCOPE_ERROR_MAX_TIME_EXCEEDED = IVISCOPE_ERROR_MAX_TIME_EXCEEDED
const NISCOPE_ERROR_SOFTWARE_FAILURE = IVI_SPECIFIC_ERROR_BASE + Int32(1)
const NISCOPE_ERROR_HARDWARE_FAILURE = IVI_SPECIFIC_ERROR_BASE + Int32(2)
const NISCOPE_ERROR_INSUFFICIENT_MEMORY = IVI_SPECIFIC_ERROR_BASE + Int32(3)
const NISCOPE_ERROR_INVALID_DATA = IVI_SPECIFIC_ERROR_BASE + Int32(4)
const NISCOPE_ERROR_GAIN_CAL_FAILURE = IVI_SPECIFIC_ERROR_BASE + Int32(5)
const NISCOPE_ERROR_SINE_CAL_FAILURE = IVI_SPECIFIC_ERROR_BASE + Int32(6)
const NISCOPE_ERROR_LIN_CAL_FAILURE = IVI_SPECIFIC_ERROR_BASE + Int32(7)
const NISCOPE_ERROR_ADC_CAL_FAILURE = IVI_SPECIFIC_ERROR_BASE + Int32(8)
const NISCOPE_ERROR_ACQ_IN_PROGRESS = IVI_SPECIFIC_ERROR_BASE + Int32(9)
const NISCOPE_ERROR_DATA_NOT_AVAILABLE = IVI_SPECIFIC_ERROR_BASE + Int32(10)
const NISCOPE_ERROR_HEATER_CIRCUIT_CAL_FAILURE = IVI_SPECIFIC_ERROR_BASE + Int32(11)
const NISCOPE_ERROR_FLEXRES_CONFIG_CORRUPT = IVI_SPECIFIC_ERROR_BASE + Int32(12)
const NISCOPE_ERROR_GAIN_OFFSET_CAL_FAILURE = IVI_SPECIFIC_ERROR_BASE + Int32(13)
const NISCOPE_ERROR_CREATE_THREAD = IVI_SPECIFIC_ERROR_BASE + Int32(14)
const NISCOPE_ERROR_WRONG_PASSWORD = IVI_SPECIFIC_ERROR_BASE + Int32(15)
const NISCOPE_ERROR_INVALID_GAIN = IVI_SPECIFIC_ERROR_BASE + Int32(16)
const NISCOPE_ERROR_INVALID_CAL_SESSION = IVI_SPECIFIC_ERROR_BASE + Int32(19)
const NISCOPE_ERROR_BAD_MEASUREMENT = IVI_SPECIFIC_ERROR_BASE + Int32(20)
const NISCOPE_ERROR_BUFFER_NOT_ACQUIRED = IVI_SPECIFIC_ERROR_BASE + Int32(21)
const NISCOPE_ERROR_TRIGGER_HAS_NOT_OCCURRED = IVI_SPECIFIC_ERROR_BASE + Int32(22)
const NISCOPE_ERROR_ILLEGAL_RELATIVE_TO = IVI_SPECIFIC_ERROR_BASE + Int32(23)
const NISCOPE_ERROR_DATA_OVERWRITTEN = IVI_SPECIFIC_ERROR_BASE + Int32(24)
const NISCOPE_ERROR_INVALID_TIMESTAMP_EVENT_TAG = IVI_SPECIFIC_ERROR_BASE + Int32(26)
const NISCOPE_ERROR_TIMEOUT_TRANSFERRING_TIMESTAMPS = IVI_SPECIFIC_ERROR_BASE + Int32(27)
const NISCOPE_ERROR_TIMEOUT_CHECKING_STATUS = IVI_SPECIFIC_ERROR_BASE + Int32(28)
const NISCOPE_ERROR_TIMEOUT_TRANSFERRING_DATA = IVI_SPECIFIC_ERROR_BASE + Int32(29)
const NISCOPE_ERROR_PLL_FAILURE = IVI_SPECIFIC_ERROR_BASE + Int32(30)
const NISCOPE_ERROR_PAR_TO_SER_CONV_FAILURE = IVI_SPECIFIC_ERROR_BASE + Int32(31)
const NISCOPE_ERROR_DMA_CONFIG_ERROR = IVI_SPECIFIC_ERROR_BASE + Int32(32)
const NISCOPE_ERROR_ILLEGAL_USER_OFFSET = IVI_SPECIFIC_ERROR_BASE + Int32(33)
const NISCOPE_ERROR_NOT_A_SCOPE = IVI_SPECIFIC_ERROR_BASE + Int32(34)
const NISCOPE_ERROR_TIMEOUT_CLEARING_TIO = IVI_SPECIFIC_ERROR_BASE + Int32(35)
const NISCOPE_ERROR_RIS_DID_NOT_COMPLETE = IVI_SPECIFIC_ERROR_BASE + Int32(36)
const NISCOPE_ERROR_INVALID_RIS_METHOD = IVI_SPECIFIC_ERROR_BASE + Int32(37)
const NISCOPE_ERROR_INVALID_RIS_NUM_AVERAGES = IVI_SPECIFIC_ERROR_BASE + Int32(38)
const NISCOPE_ERROR_ILLEGAL_DATATYPE = IVI_SPECIFIC_ERROR_BASE + Int32(39)
const NISCOPE_ERROR_ATTRIBUTES_DIFFER_BY_CHANNEL = IVI_SPECIFIC_ERROR_BASE + Int32(40)
const NISCOPE_ERROR_TRIGGER_DELAY_INVALID_WITH_RIS = IVI_SPECIFIC_ERROR_BASE + Int32(41)
const NISCOPE_ERROR_INITIATE_NOT_CALLED = IVI_SPECIFIC_ERROR_BASE + Int32(42)
const NISCOPE_ERROR_INVALID_FUNCTION_USE = IVI_SPECIFIC_ERROR_BASE + Int32(43)
const NISCOPE_ERROR_HOLDOFF_DELAY_NONZERO = IVI_SPECIFIC_ERROR_BASE + Int32(44)
const NISCOPE_ERROR_CHANNEL_NAME_TOO_LONG = IVI_SPECIFIC_ERROR_BASE + Int32(45)
const NISCOPE_ERROR_DIGITIZER_ALREADY_IN_USE = IVI_SPECIFIC_ERROR_BASE + Int32(46)
const NISCOPE_ERROR_SIM_MODEL_NOT_SUPPORTED = IVI_SPECIFIC_ERROR_BASE + Int32(47)
const NISCOPE_ERROR_SPECIFICDLL_LOAD_FAILURE = IVI_SPECIFIC_ERROR_BASE + Int32(48)
const NISCOPE_ERROR_SPECIFICDLL_GET_ADDRESS_FAILURE = IVI_SPECIFIC_ERROR_BASE + Int32(49)
const NISCOPE_ERROR_TRIGGER_TYPE_INVALID = IVI_SPECIFIC_ERROR_BASE + Int32(50)
const NISCOPE_ERROR_INVALID_FETCH_PARAMETERS = IVI_SPECIFIC_ERROR_BASE + Int32(51)
const NISCOPE_ERROR_EXT_CAL_NOT_COMPLETE = IVI_SPECIFIC_ERROR_BASE + Int32(52)
const NISCOPE_ERROR_EXT_CAL_CONSTS_INVALID = IVI_SPECIFIC_ERROR_BASE + Int32(53)
const NISCOPE_ERROR_INVALID_NUM_WAVEFORMS = IVI_SPECIFIC_ERROR_BASE + Int32(54)
const NISCOPE_ERROR_DIGITIZER_NOT_SUPPORTED_WITH_ACCESSORY = IVI_SPECIFIC_ERROR_BASE + Int32(55)
const NISCOPE_ERROR_DIGITAL_TRIGGER_NOT_SUPPORTED_WITH_RIS = IVI_SPECIFIC_ERROR_BASE + Int32(56)
const NISCOPE_ERROR_SELF_CAL_NOT_COMPLETE = IVI_SPECIFIC_ERROR_BASE + Int32(57)
const NISCOPE_ERROR_PATTERN_NOISE_SAMPLE_WORDS = IVI_SPECIFIC_ERROR_BASE + Int32(58)
const NISCOPE_ERROR_PATTERN_NOISE_INPUT_EXPECTATION = IVI_SPECIFIC_ERROR_BASE + Int32(59)
const NISCOPE_ERROR_INVALID_SESSION = 0xbffa1190
const NISCOPE_ERROR_1MOHM_PATH_BANDWIDTH_LIMITED = IVI_SPECIFIC_ERROR_BASE + Int32(60)
const NISCOPE_ERROR_EXT_CAL_STEP_OUT_OF_ORDER = IVI_SPECIFIC_ERROR_BASE + Int32(61)
const NISCOPE_ERROR_MULTIPLES_2_ALLOWED_SAMPLE_CLK_TIMEBASE_DIV = IVI_SPECIFIC_ERROR_BASE + Int32(62)
const NISCOPE_ERROR_CAL_INPUT_VOLTAGE_DETECTED = IVI_SPECIFIC_ERROR_BASE + Int32(63)
const NISCOPE_ERROR_EXT_CAL_ATTENUATOR_FAILED = IVI_SPECIFIC_ERROR_BASE + Int32(64)
const NISCOPE_ERROR_TDC_CAL_TIME_OUT = IVI_SPECIFIC_ERROR_BASE + Int32(65)
const NISCOPE_ERROR_TDC_CAL_FAILURE = IVI_SPECIFIC_ERROR_BASE + Int32(66)
const NISCOPE_ERROR_TRIGGER_CAL_FAILURE = IVI_SPECIFIC_ERROR_BASE + Int32(67)
const NISCOPE_ERROR_OFFSET_DAC_CAL_FAILURE = IVI_SPECIFIC_ERROR_BASE + Int32(68)
const NISCOPE_ERROR_INVALID_FETCH_POSITION = IVI_SPECIFIC_ERROR_BASE + Int32(69)
const NISCOPE_ERROR_RIS_MODE_NOT_SUPPORTED_WITH_P2P = IVI_SPECIFIC_ERROR_BASE + Int32(70)

struct niScope_wfmInfo
	relativeInitialX::Float64
	absoluteInitialX::Float64
	xIncrement::Float64
	actualSamples::Int32
	offset::Float64
	gain::Float64
    reserved1::Cint
    reserved2::Cint
end

struct niScope_coefficientInfo
    offset::Cint
    gain::Cint
    reserved1::Cint
    reserved2::Cint
end

struct NIComplexNumber_struct
    real::Cint
    imaginary::Cint
end

const NIComplexNumber = NIComplexNumber_struct

struct NIComplexI16_struct
    real::Cint
    imaginary::Cint
end

const NIComplexI16 = NIComplexI16_struct
const NISCOPE_VAL_CAL_ACTION_STORE = 0
const NISCOPE_VAL_CAL_ACTION_ABORT = 1
const NISCOPE_VAL_CAL_ACTION_RESET = 101
const NISCOPE_VAL_CAL_ABORT_ON_ERR = 0
const NISCOPE_VAL_CAL_ABORT_ON_MAJOR_ERR = 1
const NISCOPE_VAL_CAL_SKIP_BAD_SECTIONS = 2
const NISCOPE_VAL_CAL_RESET_BAD_SECTIONS = 3
const NISCOPE_VAL_CAL_SELF = 1
const NISCOPE_VAL_CAL_EXTERNAL = 0
const NISCOPE_VAL_CAL_MANUFACTURE = 2

# Skipping MacroDefinition: NISCOPE_VAL_CAL_UNROUTE_SIGNAL ( ViUInt32 ) 0xfffffff
# Skipping MacroDefinition: NISCOPE_VAL_CAL_POSITIVE ( ViUInt32 ) 0xffff

const NISCOPE_VAL_CAL_NEGATIVE = 0
const NISCOPE_VAL_CAL_SOURCE_GROUND = 0
const NISCOPE_VAL_CAL_SOURCE_POSITIVEFS = 1
const NISCOPE_VAL_CAL_SOURCE_NEGATIVEFS = 2
const NISCOPE_VAL_CAL_10V_CH0 = 0
